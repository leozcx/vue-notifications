{"version":3,"sources":["vue-notifications.es5.js"],"names":["root","factory","define","amd","exports","module","VueNotifications","this","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","makeMixin","Vue","pluginOptions","_ref5","hooks","init","destroy","mounted","innerMethods","getVersion","major","VUE_VERSION","evangelion","ghostInTheShell","vueApp","vueAppOptions","$options","notificationsField","propertyName","initVueNotificationPlugin","launchWatchableNotifications","unlinkVueNotificationPlugin","PLUGIN_NAME","PACKAGE_NAME","PROPERTY_NAME","TYPE","error","warn","info","success","clearAll","MESSAGES","alreadyInstalled","methodNameConflict","version","match","regular","minor","showInConsole","msg","type","types","console","log","showDefaultMessage","_ref","message","title","debugMsg","addClass","elem","className","classList","add","removeClass","remove","replace","RegExp","split","join","hasClass","contains","test","showInlineFn","_ref2","inClass","outClass","innerText","clearInlineFn","_ref3","showInlineMessage","_ref4","id","timeout","_ref4$classes","classes","undefined","watch","cb","document","getElementById","prev","cur","setInterval","call","setTimeout","getValues","config","result","keepFnFields","keys","forEach","field","fnField","bind","showMessage","options","valuesObj","isLinkedToElem","isMethodOverridden","method","addMethods","targetObj","typesObj","v","setMethod","name","methods","makeMethod","configName","newConfig","assign","notifications","$emit","attachedMethods","installed","install","arguments","length","mixin","window","use"],"mappings":"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","file":"vue-notifications.es5.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.VueNotifications = factory();\n  }\n}(this, function() {\n'use strict';\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar PLUGIN_NAME = 'VueNotifications';\nvar PACKAGE_NAME = 'vue-notifications';\nvar PROPERTY_NAME = 'notifications';\n\nvar TYPE = {\n  error: 'error',\n  warn: 'warn',\n  info: 'info',\n  success: 'success',\n  clearAll: 'clearAll'\n};\n\nvar VUE_VERSION = {\n  evangelion: 1,\n  ghostInTheShell: 2\n};\n\nvar MESSAGES = {\n  alreadyInstalled: PLUGIN_NAME + ': plugin already installed',\n  methodNameConflict: PLUGIN_NAME + ': names conflict - '\n};\n\nvar innerMethods = {\n  /**\n   * @param  {Object} Vue\n   * @return {Object}\n   */\n  getVersion: function getVersion(Vue) {\n    var version = Vue.version.match(/(\\d+)/g);\n    return {\n      major: +version[0],\n      regular: +version[1],\n      minor: +version[2]\n    };\n  },\n\n\n  /**\n   * @param  {String} msg\n   * @param  {String} type\n   * @param  {Object} types\n   */\n  showInConsole: function showInConsole(msg, type, types) {\n    if (type === types.error) console.error(msg);else if (type === types.warn) console.warn(msg);else if (type === types.success) console.info(msg);else console.log(msg);\n  },\n\n\n  /**\n   * @param  {String} type\n   * @param  {String} message\n   * @param  {String} title\n   * @param  {String} debugMsg\n   * @return  {String}\n   */\n  showDefaultMessage: function showDefaultMessage(_ref) {\n    var type = _ref.type,\n        message = _ref.message,\n        title = _ref.title,\n        debugMsg = _ref.debugMsg;\n\n    var msg = 'Title: ' + title + ', Message: ' + message + ', DebugMsg: ' + debugMsg + ', type: ' + type;\n\n    innerMethods.showInConsole(msg, type, TYPE);\n\n    return msg;\n  },\n\n  /**\n   * @param  {Object} elem\n   * @param  {String} className\n   */\n  addClass: function addClass(elem, className) {\n    if (elem.classList) {\n      elem.classList.add(className);\n    } else {\n      elem.className += ' ' + className;\n    }\n  },\n\n  /**\n   * @param  {Object} elem\n   * @param  {String} className\n   */\n  removeClass: function removeClass(elem, className) {\n    if (elem.classList) {\n      elem.classList.remove(className);\n    } else {\n      elem.className = elem.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    }\n  },\n\n  /**\n   * @param  {Object} elem\n   * @param  {String} className\n   * @return {Boolean}\n   */\n  hasClass: function hasClass(elem, className) {\n    if (elem.classList) {\n      return elem.classList.contains(className);\n    } else {\n      return new RegExp('(^| )' + className + '( |$)', 'gi').test(elem.className);\n    }\n  },\n\n  /**\n   * @param  {Object} elem\n   * @param  {String} message\n   * @param  {String} inClass\n   * @param  {String} outClass\n   */\n  showInlineFn: function showInlineFn(elem, message, _ref2) {\n    var inClass = _ref2.inClass,\n        outClass = _ref2.outClass;\n\n    elem.innerText = message;\n    if (inClass) {\n      if (!innerMethods.hasClass(elem, inClass)) innerMethods.addClass(elem, inClass);\n    }\n\n    if (outClass) {\n      if (innerMethods.hasClass(elem, outClass)) innerMethods.removeClass(elem, outClass);\n    }\n  },\n\n  /**\n   * @param  {Object} elem\n   * @param  {String} inClass\n   * @param  {String} outClass\n   */\n  clearInlineFn: function clearInlineFn(elem, _ref3) {\n    var inClass = _ref3.inClass,\n        outClass = _ref3.outClass;\n\n    if (inClass) {\n      if (innerMethods.hasClass(elem, inClass)) innerMethods.removeClass(elem, inClass);\n    }\n\n    if (outClass) {\n      if (!innerMethods.hasClass(elem, outClass)) innerMethods.addClass(elem, outClass);\n    }\n\n    elem.innerText = '';\n  },\n\n  /**\n   * @param  {String} id\n   * @param  {String} type\n   * @param  {String} timeout\n   * @param  {String} message\n   * @param  {Object} classes\n   * @param  {Function} watch\n   * @param  {String} debugMsg\n   * @param  {Function} cb\n   * @param  {Object} vueApp\n   * @return  {String}\n   */\n  showInlineMessage: function showInlineMessage(_ref4, vueApp) {\n    var id = _ref4.id,\n        type = _ref4.type,\n        timeout = _ref4.timeout,\n        message = _ref4.message,\n        _ref4$classes = _ref4.classes,\n        classes = _ref4$classes === undefined ? {} : _ref4$classes,\n        watch = _ref4.watch,\n        debugMsg = _ref4.debugMsg,\n        cb = _ref4.cb;\n\n    // TODO (S.Panfilov) handle class add and remove here\n    if (debugMsg) innerMethods.showInConsole(debugMsg, type, TYPE);\n    var elem = document.getElementById(id);\n\n    if (watch) {\n      (function () {\n        timeout = false;\n        if (watch && watch()) innerMethods.showInlineFn(elem, message, classes);\n        // const interval = setInterval(() => {\n        var prev = void 0;\n        var cur = void 0;\n\n        // TODO (S.Panfilov)make sure no memory leak here, destroy interval when we're leave page\n        setInterval(function () {\n          if (watch) {\n            cur = watch();\n            // clearInterval(interval)\n            if (cur !== prev) {\n              if (cur) innerMethods.showInlineFn.call(innerMethods, elem, message, classes);\n              if (!cur) innerMethods.clearInlineFn.call(innerMethods, elem, classes);\n              prev = cur;\n            }\n          }\n        }, 50);\n      })();\n    }\n\n    if (!watch) {\n      innerMethods.showInlineFn(elem, message, classes);\n      setTimeout(function () {\n        innerMethods.clearInlineFn.call(vueApp, elem, classes);\n      }, timeout);\n    }\n\n    // TODO (S.Panfilov) BUG: Weird behaviour: cb calls 2 times\n    if (cb) {\n      // TODO (S.Panfilov) bug here\n      cb.call(vueApp, elem, function () {\n        return innerMethods.clearInlineFn.call(innerMethods, elem, classes);\n      });\n    }\n\n    return message;\n  },\n\n\n  /**\n   * @param  {Object} vueApp\n   * @param  {Object} config\n   * @return {Object}\n   */\n  getValues: function getValues(vueApp, config) {\n    var result = {};\n    var keepFnFields = ['cb', 'watch'];\n\n    Object.keys(config).forEach(function (field) {\n      keepFnFields.forEach(function (fnField) {\n        if (field === fnField) {\n          result[field] = config[field].bind(vueApp);\n        } else {\n          result[field] = typeof config[field] === 'function' ? config[field].call(vueApp) : config[field];\n        }\n      });\n    });\n\n    return result;\n  },\n\n\n  /**\n   * @param  {Object} config\n   * @param  {Object} options\n   * @param  {Object} vueApp\n   */\n  showMessage: function showMessage(config, options, vueApp) {\n    var valuesObj = innerMethods.getValues(vueApp, config);\n    var isLinkedToElem = !!valuesObj.id;\n\n    if (isLinkedToElem) {\n      innerMethods.showInlineMessage(valuesObj, vueApp);\n    } else {\n      var isMethodOverridden = options && options[valuesObj.type];\n      var method = isMethodOverridden ? options[valuesObj.type] : innerMethods.showDefaultMessage;\n      method(valuesObj, vueApp);\n    }\n\n    if (config.cb) return config.cb();\n  },\n\n\n  /**\n   * @param {Object} targetObj\n   * @param {Object} typesObj\n   * @param {Object} options\n   * @return {undefined}\n   * */\n  addMethods: function addMethods(targetObj, typesObj, options) {\n    Object.keys(typesObj).forEach(function (v) {\n      targetObj[typesObj[v]] = function (config) {\n        config.type = typesObj[v];\n        // TODO (S.Panfilov)fix 'vueApp' in param\n        return innerMethods.showMessage(config, options);\n      };\n    });\n  },\n\n\n  /**\n   * @param  {Object} vueApp\n   * @param  {String} name\n   * @param  {Object} options\n   * @param  {Object} pluginOptions\n   */\n  setMethod: function setMethod(vueApp, name, options, pluginOptions) {\n    if (!options.methods) options.methods = {};\n\n    if (options.methods[name]) {\n      // TODO (S.Panfilov) not sure - throw error here or just warn\n      console.error(MESSAGES.methodNameConflict + name);\n    } else {\n      options.methods[name] = innerMethods.makeMethod(vueApp, name, options, pluginOptions);\n    }\n  },\n\n\n  /**\n   * @param  {Object} vueApp\n   * @param  {String} configName\n   * @param  {Object} options\n   * @param  {Object} pluginOptions\n   * @return {Function}\n   */\n  makeMethod: function makeMethod(vueApp, configName, options, pluginOptions) {\n    return function (config) {\n      var newConfig = {};\n      Object.assign(newConfig, VueNotifications.config);\n      Object.assign(newConfig, options[VueNotifications.propertyName][configName]);\n      Object.assign(newConfig, config);\n\n      return innerMethods.showMessage(newConfig, pluginOptions, vueApp);\n    };\n  },\n\n  /**\n   * @param  {Object} vueApp\n   * @param  {Object} notifications\n   * @param  {Object} pluginOptions\n   */\n  initVueNotificationPlugin: function initVueNotificationPlugin(vueApp, notifications, pluginOptions) {\n    if (!notifications) return;\n    Object.keys(notifications).forEach(function (name) {\n      innerMethods.setMethod(vueApp, name, vueApp.$options, pluginOptions);\n    });\n\n    vueApp.$emit(PACKAGE_NAME + '-initiated');\n  },\n\n  /**\n   * @param  {Object} vueApp\n   * @param  {Object} notifications\n   */\n  launchWatchableNotifications: function launchWatchableNotifications(vueApp, notifications) {\n    if (!notifications) return;\n    Object.keys(notifications).forEach(function (name) {\n      if (vueApp[name] && notifications[name].watch) {\n        vueApp[name]();\n      }\n    });\n\n    vueApp.$emit(PACKAGE_NAME + '-launched_watchable');\n  },\n\n  /**\n   * @param  {Object} vueApp\n   * @param  {Object} notifications\n   */\n  unlinkVueNotificationPlugin: function unlinkVueNotificationPlugin(vueApp, notifications) {\n    if (!notifications) return;\n    var attachedMethods = vueApp.$options.methods;\n    Object.keys(notifications).forEach(function (name) {\n      if (attachedMethods[name]) {\n        attachedMethods[name] = undefined;\n        delete attachedMethods[name];\n      }\n    });\n\n    vueApp.$emit(PACKAGE_NAME + '-unlinked');\n  }\n};\n\n/**\n * @param {Function} Vue\n * @param {Object} pluginOptions\n * @return {Object}\n */\nfunction makeMixin(Vue, pluginOptions) {\n  var _ref5;\n\n  var hooks = {\n    init: '',\n    destroy: 'beforeDestroy',\n    mounted: ''\n  };\n\n  if (innerMethods.getVersion(Vue).major === VUE_VERSION.evangelion) {\n    hooks.init = 'init';\n    hooks.mounted = 'compiled';\n  }\n  if (innerMethods.getVersion(Vue).major === VUE_VERSION.ghostInTheShell) {\n    hooks.init = 'beforeCreate';\n    hooks.mounted = 'mounted';\n  }\n\n  return _ref5 = {}, _defineProperty(_ref5, hooks.init, function () {\n    var vueApp = this;\n    var vueAppOptions = this.$options;\n    var notificationsField = vueAppOptions[VueNotifications.propertyName];\n\n    innerMethods.initVueNotificationPlugin(vueApp, notificationsField, pluginOptions);\n  }), _defineProperty(_ref5, hooks.mounted, function () {\n    var vueApp = this;\n    var vueAppOptions = this.$options;\n    var notificationsField = vueAppOptions[VueNotifications.propertyName];\n\n    innerMethods.launchWatchableNotifications(vueApp, notificationsField);\n  }), _defineProperty(_ref5, hooks.destroy, function () {\n    var vueApp = this;\n    var vueAppOptions = this.$options;\n    var notificationsField = vueAppOptions[VueNotifications.propertyName];\n    innerMethods.unlinkVueNotificationPlugin(vueApp, notificationsField);\n  }), _ref5;\n}\n\nvar VueNotifications = {\n  type: TYPE,\n  propertyName: PROPERTY_NAME,\n  config: {\n    type: TYPE.info,\n    timeout: 3000\n  },\n  installed: false,\n  /**\n   * Plugin | vue-notifications\n   * @param  {Function} Vue\n   * @param  {Object} pluginOptions\n   * @this VueNotifications\n   */\n  install: function install(Vue) {\n    var pluginOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (this.installed) throw console.error(MESSAGES.alreadyInstalled);\n    var mixin = makeMixin(Vue, pluginOptions);\n    Vue.mixin(mixin);\n\n    innerMethods.addMethods(this, this.type, pluginOptions);\n\n    this.installed = true;\n  }\n\n  //TODO (S.Panfilov) add ability to access this.notifications.someError.message\n  //TODO (S.Panfilov) add \"noCall:true\" property\n\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(VueNotifications);\n}\nreturn VueNotifications;\n}));\n"]}